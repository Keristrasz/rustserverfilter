NODE_ENV="development"
DB_CONNECT_STRING="mongodb+srv://user:7o5InmsZJg2FqIgE@cluster6.jjfy6nr.mongodb.net/cluster6"

NEXT_PUBLIC_APP_ID="application-0-pcbqz"

# Using .env file: This approach allows you to store your environment variables in a separate file (.env) and load them using the dotenv package. It provides a convenient way to manage your environment-specific configuration without modifying your code or the next.config.js file. This approach is recommended when you have multiple environment-specific configurations or when you want to keep your environment variables separate from your codebase.

# Using next.config.js file: This approach allows you to define your environment variables directly in the next.config.js file using the env property. It provides a centralized place to configure your Next.js app, including environment-specific variables. This approach is useful when you have a small number of environment variables specific to your Next.js app and want to keep the configuration within the project's codebase.

# In general, if you have a large number of environment variables or want to keep your configuration separate from your code, using the .env file approach is recommended. On the other hand, if you have a small number of environment variables specific to Next.js and want to keep the configuration within the codebase, using the next.config.js approach is a good option.